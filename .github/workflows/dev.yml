name: 'Dev: Mock release'
on:
  pull_request:
    types:
      - closed
    branches:
      - dev

jobs:
  create_release_tag:
    name: "Create release tag"
    env:
      VENDOR_VERSION: ${{ github.event.inputs.vendor_version || '0.0.1' }}

    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - uses: softprops/action-gh-release@v2
        id: create_release
        name: Create release and add tauri-update.json
        with:
          tag_name: "v${{ env.VENDOR_VERSION }}"
          name: "v${{ env.VENDOR_VERSION }}"
          body: "v${{ env.VENDOR_VERSION }}"
          prerelease: false
          draft: true
          fail_on_unmatched_files: true

  publish-tauri:
    needs: create_release_tag
    env:
      RELEASE_ID: ${{ needs.create_release_tag.outputs.release_id }}
      VENDOR_VERSION: ${{ github.event.inputs.vendor_version || '0.0.1' }}
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest-large, windows-latest, ubuntu-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - run: git tag ${{ github.event.inputs.tag }}
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install Mac Rust Targets
        if: matrix.platform == 'macos-latest-large'
        run: rustup target add universal-apple-darwin

      - name: install Ubuntu Dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install app dependencies and build it
        run: npm install && npm run build

      - uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        with:
          releaseId: ${{ env.RELEASE_ID }}
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.platform == 'macos-latest-large' && '--target universal-apple-darwin' || '' }}